version: '3.8'

services:
  app:
    build:
      context: .
    ports:
      - "8080:8080"
    environment:
      - RUST_LOG=info
      - SCYLLA_URI=scylladb:9042
      - RUST_MIN_STACK=8388608
    networks:
      - forum-network
    depends_on:
      scylladb:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    ulimits:
      stack: 8388608  # 8MB stack size
    restart: unless-stopped

  # Database
  scylladb:
    image: scylladb/scylla:latest
    ports:
      - "9042:9042"
    volumes:
      - ./scylla-data:/var/lib/scylla
    networks:
      - forum-network
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
      interval: 10s
      timeout: 5s
      retries: 10


  # Log aggregation
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-data:/loki
    networks:
      - forum-network

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./monitoring/promtail:/etc/promtail
    command: -config.file=/etc/promtail/config.yml
    networks:
      - forum-network
    depends_on:
      - loki

  # Load testing service
  locust:
    build:
      context: ./load-test
      dockerfile: Dockerfile
    ports:
      - "8089:8089"
    volumes:
      - ./load-test:/mnt/locust
    environment:
      - TARGET_HOST=http://app:8080
    networks:
      - forum-network
    depends_on:
      - app

  # Monitoring services
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - forum-network
    depends_on:
      - app

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
    ports:
      - "3000:3000"
    networks:
      - forum-network
    depends_on:
      - prometheus

  alertmanager:
    image: prom/alertmanager:latest
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    ports:
      - "9093:9093"
    networks:
      - forum-network
    depends_on:
      - prometheus

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"  # UI
      - "14268:14268"  # HTTP collector for trace submission
      - "4317:4317"    # OTLP gRPC receiver
      - "6831:6831/udp"  # Jaeger Thrift over UDP
      - "14269:14269"  # Admin port with metrics
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
      - COLLECTOR_OTLP_ENABLED=true
      - METRICS_BACKEND=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
      - METRICS_HTTP_ROUTE=/metrics
    networks:
      - forum-network

networks:
  forum-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
  scylla-data:
  loki-data: 